Class RT_Ghost : Weapon {
    bool active;

    Default {
        Weapon.AmmoUse 1;
        Weapon.AmmoGive 0;
        Weapon.AmmoUse1 1;
        Weapon.AmmoGive1 0;
        Weapon.AmmoUse2 1;
        Weapon.AmmoGive2 0;
        Weapon.SlotNumber 3;
        Weapon.BobRangeX 0;
        Weapon.BobRangeY 0;
        +Weapon.Ammo_Optional;
        +Weapon.NOALERT;
        Inventory.Pickupmessage "Picked up the Ghost!";
    }

    override void PostBeginPlay()
    {
        Super.PostBeginPlay();
        active = false;
    }

    void EnableGhost()
    {
        active = true;
    }

    void DisableGhost()
    {
        active = false;
    }

    States
    {
        Ready:
            TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
            GHOA A 1 A_WeaponReady(WRF_NOFIRE);
            GHOA B 1 A_WeaponReady(WRF_NOFIRE);
            GHOA C 1 A_WeaponReady(WRF_NOFIRE);
            GHOA D 1 A_WeaponReady(WRF_NOFIRE);
            GHOA E 1 A_WeaponReady(WRF_NOFIRE);
            GHOA F 1 A_WeaponReady(WRF_NOFIRE);
            GHOA G 1 A_WeaponReady(WRF_NOFIRE);
            GHOA H 1 A_WeaponReady(WRF_NOFIRE);
            GHOA I 1 A_WeaponReady(WRF_NOFIRE);
            GHOA J 1 A_WeaponReady(WRF_NOFIRE);
            GHOB A 1 A_WeaponReady(WRF_NOFIRE);
            GHOB B 1 A_WeaponReady(WRF_NOFIRE);
            GHOB C 1 A_WeaponReady(WRF_NOFIRE);
            GHOB D 1 A_WeaponReady(WRF_NOFIRE);
            GHOB E 1 A_WeaponReady(WRF_NOFIRE);
            GHOB F 1 A_WeaponReady(WRF_NOFIRE);
            GHOB G 1 A_WeaponReady(WRF_NOFIRE);
            GHOB H 1 A_WeaponReady(WRF_NOFIRE);
            GHOB I 1 A_WeaponReady(WRF_NOFIRE);
            GHOB J 1 A_WeaponReady(WRF_NOFIRE);
            GHOC A 1 A_WeaponReady(WRF_NOFIRE);
            GHOC B 1 A_WeaponReady(WRF_NOFIRE);
            GHOC C 1 A_WeaponReady(WRF_NOFIRE);
            GHOC D 1 A_WeaponReady(WRF_NOFIRE);
            GHOC E 1 A_WeaponReady(WRF_NOFIRE);
            GHOC F 1 A_WeaponReady(WRF_NOFIRE);
            GHOC G 1 A_WeaponReady(WRF_NOFIRE);
            GHOC H 1 A_WeaponReady(WRF_NOFIRE);
            GHOC I 1 A_WeaponReady(WRF_NOFIRE);
            GHOC J 1 A_WeaponReady(WRF_NOFIRE);
            GHOD A 1 A_WeaponReady(WRF_NOFIRE);
            GHOD B 1 A_WeaponReady(WRF_NOFIRE);
            GHOD C 1 A_WeaponReady(WRF_NOFIRE);
            GHOD D 1 A_WeaponReady(WRF_NOFIRE);
            GHOD E 1 A_WeaponReady(WRF_NOFIRE);
            GHOD F 1 A_WeaponReady(WRF_NOFIRE);
            GHOD G 1 A_WeaponReady(WRF_NOFIRE);
            GHOD H 1 A_WeaponReady(WRF_NOFIRE);
            GHOD I 1 A_WeaponReady(WRF_NOFIRE);
            GHOD J 1 A_WeaponReady(WRF_NOFIRE);
            GHOE A 1 A_WeaponReady(WRF_NOFIRE);
            GHOE B 1 A_WeaponReady(WRF_NOFIRE);
            GHOE C 1 A_WeaponReady(WRF_NOFIRE);
            GHOE D 1 A_WeaponReady(WRF_NOFIRE);
            GHOE E 1 A_WeaponReady(WRF_NOFIRE);
            GHOE F 1 A_WeaponReady(WRF_NOFIRE);
            GHOE G 1 A_WeaponReady(WRF_NOFIRE);
            GHOE H 1 A_WeaponReady(WRF_NOFIRE);
            GHOE I 1 A_WeaponReady(WRF_NOFIRE);
            GHOE J 1 A_WeaponReady(WRF_NOFIRE);
            GHOF A 1 A_WeaponReady(WRF_NOFIRE);
            GHOF B 1 A_WeaponReady(WRF_NOFIRE);
            GHOF C 1 A_WeaponReady(WRF_NOFIRE);
            GHOF D 1 A_WeaponReady(WRF_NOFIRE);
            GHOF E 1 A_WeaponReady(WRF_NOFIRE);
            GHOF F 1 A_WeaponReady(WRF_NOFIRE);
            GHOF G 1 A_WeaponReady(WRF_NOFIRE);
            GHOF H 1 A_WeaponReady(WRF_NOFIRE);
            GHOF I 1 A_WeaponReady(WRF_NOFIRE);
            GHOF J 1 A_WeaponReady(WRF_NOFIRE);
            GHOG A 1 A_WeaponReady(WRF_NOFIRE);
            Loop;
        Deselect:
            GHOA A 1 A_Lower;
            GHOA A 0 {
                invoker.DisableGhost();
            }
            Loop;
        Select:
            GHOA A 1 A_Raise;
            GHOA A 0 {
                invoker.EnableGhost();
            }
            Loop;
        Fire:
            Goto Ready;
    }
}