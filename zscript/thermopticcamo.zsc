class RT_ThermopticCamo : Inventory
{
    float aux;
    bool prev_thermop_enabled;

	default {
		Inventory.MaxAmount 1;
		+INVENTORY.PERSISTENTPOWER;
	}

	override void DoEffect() {
		super.DoEffect();

		PlayerInfo p = players[consoleplayer];
		bool thermop_enabled = Cvar.GetCVar("rt_thermopticcamo", p).GetBool();

        if (thermop_enabled && !prev_thermop_enabled) {
            owner.A_GiveInventory("PowerInvisibility");
        }

        if (thermop_enabled) {
            aux -= 0.1;
        } else {
            if (aux < 10) {
                aux += 0.1;
            }
        }

        if (aux <= 0 && thermop_enabled) {
            Cvar.GetCVar("rt_thermopticcamo", p).SetBool(false);
        }

        thermop_enabled = Cvar.GetCvar("rt_thermopticcamo", p).GetBool();

        if (prev_thermop_enabled && !thermop_enabled) {
            owner.A_TakeInventory("PowerInvisibility");
        }

        prev_thermop_enabled = thermop_enabled;

        return Super.Tick();
	}


	override void PostBeginPlay()
	{
        A_Log("Got the thermoptic camo!");
		aux = 10.0;
        prev_thermop_enabled = false;
	}

}

class RT_ThermopticCamo_Assault : RT_ThermopticCamo {
	override void PostBeginPlay()
	{
        Super.PostBeginPlay();
		aux = 3.0;
	}
}

class RT_ThermopticCamo_Recon : RT_ThermopticCamo {
	override void PostBeginPlay()
	{
        Super.PostBeginPlay();
		aux = 12.0;
	}
}
	
